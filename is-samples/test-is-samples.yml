# ----------------------------------------------------------------------------
#
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# ----------------------------------------------------------------------------
AWSTemplateFormatVersion: 2010-09-09
Description: >
  Tomcat Server with WSO2 IS Samples

##############################################################################################
# Mappings for Ubuntu AMIs
# Refer https://cloud-images.ubuntu.com/locator/ec2/ for ubuntu AMI-ID's for the LTS version
##############################################################################################
Mappings:
  RegionMap:
    ap-northeast-1:
      AMI: ami-2f2d9c49
    ap-northeast-2:
      AMI: ami-e49e398a
    ap-south-1:
      AMI: ami-46eea129
    ap-southeast-1:
      AMI: ami-84a6f3e7
    ap-southeast-2:
      AMI: ami-4cc8232e
    ca-central-1:
      AMI: ami-338b3057
    eu-central-1:
      AMI: ami-e22aaa8d
    eu-west-1:
      AMI: ami-2e832957
    eu-west-2:
      AMI: ami-3fc8d75b
    sa-east-1:
      AMI: ami-981550f4
    us-east-1:
      AMI: ami-c29e1cb8
    us-east-2:
      AMI: ami-f0f8d695
    us-west-1:
      AMI: ami-8b90a9eb
    us-west-2:
      AMI: ami-25cf1c5d

#############################
# User inputs
#############################
Parameters:
  AMI:
    Type: String
    Description: AMI of the deployment [Ubuntu AMI with JDK installed].
  KeyPairName:
    Description: This is used to ssh to the node. If you don't have a key, please create one from AWS console and rerun the script
    Type: "AWS::EC2::KeyPair::KeyName"
  WSO2ISInstanceType:
    Description: EC2 instance type of the WSO2 IS Samples Node [t2.micro is the free tier]
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t1.micro
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
    ConstraintDescription: must be a valid EC2 instance type
  ISHttpsUrl:
    Type: String
    Description: Enter the URL of the WSO2 IS deployment.
  ProductVersion:
    Type: String
    Description: Enter the WSO2 IS Product Version.
################################
# Create AWS resources
################################
Resources:
  ##############################
  # Create VPC and subnets
  ##############################
  WSO2EnvVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: wso2-vpc
  WSO2EnvPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.254.0/24
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      VpcId: !Ref WSO2EnvVPC
      Tags:
        - Key: Name
          Value: wso2-public-subnet-1
  WSO2EnvInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  WSO2EnvDHCPOptions:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainNameServers:
        - AmazonProvidedDNS
  WSO2EnvNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref WSO2EnvVPC
  WSO2EnvPublicRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2EnvVPC
  WSO2EnvRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref WSO2EnvVPC
  WSO2EnvSampleEIPAssociation:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      AllocationId: !GetAtt WSO2EnvSampleEIP.AllocationId
      InstanceId: !Ref WSO2EnvSampleInstance

  ################################
  # Create network configurations
  ################################
  WSO2EnvNATGateway:
    DependsOn: gw1
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt WSO2EnvEIP1.AllocationId
      SubnetId: !Ref WSO2EnvPublicSubnet1
      Tags:
        - Key: Name
          Value: WSO2EnvNatGateway
  acl1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref WSO2EnvNetworkAcl
  acl2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref WSO2EnvNetworkAcl
  subnetacl2:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref WSO2EnvNetworkAcl
      SubnetId: !Ref WSO2EnvPublicSubnet1
  gw1:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref WSO2EnvVPC
      InternetGatewayId: !Ref WSO2EnvInternetGateway
  subnetroute1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref WSO2EnvPublicRouteTable1
      SubnetId: !Ref WSO2EnvPublicSubnet1
  route1:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref WSO2EnvPublicRouteTable1
      GatewayId: !Ref WSO2EnvInternetGateway
    DependsOn: gw1
  route2:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref WSO2EnvRouteTable2
      NatGatewayId: !Ref WSO2EnvNATGateway
  dchpassoc1:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref WSO2EnvVPC
      DhcpOptionsId: !Ref WSO2EnvDHCPOptions

  #########################
  # Create security groups
  #########################
  WSO2EnvInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for IS EC2 compute instances
      VpcId: !Ref WSO2EnvVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8443
        ToPort: 8443
        CidrIp: 0.0.0.0/0
  ###########################
  # Create Elastic IPs
  ###########################
  WSO2EnvSampleEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  WSO2EnvEIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  #######################
  # EC2 Compute instances
  #######################
  WSO2EnvSampleInstance:
    Type: 'AWS::EC2::Instance'
    #CreationPolicy:
      #ResourceSignal:
        #Count: '1'
        #Timeout: PT60M
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: wso2-is-samples-node
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref WSO2EnvPublicSubnet1
          GroupSet:
            - !Ref WSO2EnvInstanceSecurityGroup
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash

          #TODO: We need to figure out the default user in the system.
          #So, provided permissions to all the users. Need to fix!

          sudo mkdir -p /opt/testgrid
          sudo chmod 777 -R /opt/testgrid

          mkdir -p /opt/testgrid/workspace/TOMCATHOME
          cd /opt/testgrid/workspace/TOMCATHOME
          wget https://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.35/bin/apache-tomcat-8.5.35.zip
          sudo apt-get -y install zip
          unzip apache-tomcat-8.5.35.zip

          wget http://maven.wso2.org/nexus/content/repositories/releases/org/wso2/is/org.wso2.sample.is.sso.agent/${ProductVersion}/org.wso2.sample.is.sso.agent-${ProductVersion}.war
          unzip org.wso2.sample.is.sso.agent-${ProductVersion}.war -d travelocity.com
          mv travelocity.com apache-tomcat-8.5.35/webapps/

          wget http://maven.wso2.org/nexus/content/repositories/releases/org/wso2/is/PassiveSTSSampleApp/${ProductVersion}/PassiveSTSSampleApp-${ProductVersion}.war
          unzip PassiveSTSSampleApp-${ProductVersion}.war -d PassiveSTSSampleApp
          mv PassiveSTSSampleApp apache-tomcat-8.5.35/webapps/

          cd /opt/testgrid/workspace/TOMCATHOME/apache-tomcat-8.5.35/

          sed -i 's,https://localhost:9443,${ISHttpsUrl},g' webapps/travelocity.com/WEB-INF/classes/travelocity.properties
          sed -i 's,SAML2.IdPEntityId=localhost,SAML2.IdPEntityId='$(echo ${ISHttpsUrl} | sed 's,https://,,g' | sed 's,:443,,g')',g' webapps/travelocity.com/WEB-INF/classes/travelocity.properties
          sed -i 's,http://localhost:8080,http://'$(curl http://169.254.169.254/latest/meta-data/public-ipv4)':8080,g' webapps/travelocity.com/WEB-INF/classes/travelocity.properties

          sed -i 's,https://localhost:9443,${ISHttpsUrl},g' webapps/PassiveSTSSampleApp/WEB-INF/web.xml
          sed -i 's,http://localhost:8080/PassiveSTSSampleApp/,http://'$(curl http://169.254.169.254/latest/meta-data/public-ipv4)':8080/PassiveSTSSampleApp/index.jsp,g' webapps/PassiveSTSSampleApp/WEB-INF/web.xml

          cd bin
          sh catalina.sh start
          #/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WSO2EnvSampleInstance --region ${AWS::Region}

#####################################
# Print details of the created stack 
#####################################
Outputs:
  ISSamplesHttpUrl:
    Value: !Sub 'http://${WSO2EnvSampleInstance.PublicIp}:8080'
    Description: Public access Tomcat URL
